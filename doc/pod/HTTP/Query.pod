=head1 Name

HTTP.Query - Easy GET query string management

=head1 Synopsis

  JSAN.use('HTTP.Query');

  var query = new HTTP.Query(location.search);

  query.set('from', 'me@example.com');
  query.add('to', 'you@example.com');
  query.add('to', 'him@example.com');

  location.search = query.toString();

=head1 Description

This class parses a GET query string, pulling out its argument keys and values
and unescaping their encodings, and arranges them into an object. If a given
query key is specified multiple times, then all of its values will be stored
in an array for that key.

=head1 Constructor

  var query = new HTTP.Query;
  var query = new HTTP.Query(queryString);

Returns a new C<HTTP.Query> object that has parsed the C<queryString> passed
as the single argument. If no query argument is passed and C<HTTP.Query> is
running in a Web browser, C<window.document.location.search> will be used,
instead. To initialize an empty C<HTTP.Query> object, pass a C<null> or empty
string to the constructor.

=head3 get()

  var value = query.get(key);

Gets the value stored for a given key in the table. If the key has multiple
values, they will all be returned in an array object.

=head3 set()

  query.set(key, value);

Sets the value for a key. Any previous value or values for that key will be
discarded.

=head3 unset()

  query.unset(key);

Takes a single key argument and deletes that key from the query object, so
that none of its values will be in the object any longer.

=head3 clear()

  query.clear();

Clears the query object of all values.

=head3 add()

  query.add(key, value);

Adds a new value to the query object. This method is the best interface for
adding mutiple values for a single key. Once a key has multiple values, those
values will be returned from a call to C<get()> as an array.

=head3 act()

  query.act(function (key, value) {
      document.write(key + ' => ' + value);
      return true;
  });

Pass a function to this method to have it iterate over all of the key/value
pairs in the query object. Keys with multiple values will trigger the
execution of the function multiple times: once for each value. The function
should expect two arguments: a key and a value. Iteration terminates when the
code reference returns false, so be sure to have it return a true value if you
want it to iterate over every value in the query object.

=head3 toString()

  alert(qry.toString());
  location.search = query.toString('&');
  alert(qry);

Overrides the default toString() method inherited from Object to return a
properly-formatted and encoded GET query string. By default, it uses ";" as
the query argument delimiter. Pass in "&" as the single argument to toString()
for it to be used as the argument delimiter. Of course, when the C<HTTP.Query>
object itself is used in a string context, thus implicitly calling toString()
";" will be the delimiter; call toString("&") explicitly to use "&" as the
delimiter.

=head1 Author

David E. Wheeler <david@justatheory.com>

=head1 Copyright and License

Copyright 2005-2011 by David E. Wheeler.

This program is free software; you can redistribute it and/or modify it under
the terms of the Perl Artistic License or the GNU GPL.

See L<http://www.perl.com/perl/misc/Artistic.html> and
L<http://www.gnu.org/copyleft/gpl.html>.

=cut
